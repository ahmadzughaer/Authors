{"version":3,"sources":["components/AuthorsTable.js","components/CreateAuthorForm.js","components/EditAuthorForm.js","App.js","reportWebVitals.js","index.js"],"names":["props","useState","authors","setAuthors","useEffect","axios","get","then","response","data","catch","error","console","log","className","length","map","item","index","name","onClick","e","authId","_id","delete","res","to","author","type","value","navigate","CreateAuthorForm","setName","errors","setErrors","err","style","color","onSubmit","preventDefault","post","errorResponse","errorArr","Object","keys","key","push","message","onChange","target","marginLeft","EditAuthorForm","id","setAuthor","exists","setExists","test","settest","marginTop","put","placeholder","App","AuthorsTable","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.915f444a.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport axios from \"axios\"\r\nimport { Link, navigate } from \"@reach/router\"\r\n\r\nexport default props => {\r\n    const [authors, setAuthors] = useState([])\r\n    const getAuthorId = author => {\r\n        return `/${author._id}`\r\n    }\r\n    const editAuthorUrl = author_id => {\r\n        return `${author_id}/edit`\r\n    }\r\n\r\n    useEffect( () => {\r\n        axios.get(\"http://localhost:8000/api/author\")\r\n            .then(response => setAuthors((response.data)))\r\n            .catch(error => console.log(\"There was an issue: \", error))\r\n    })\r\n    const navigateToNewRoute = () => {\r\n        navigate(\"/new\");\r\n    }\r\n        const deleteAuthor = (authId) => {\r\n            axios.delete('http://localhost:8000/api/author/' + authId)\r\n                .then(res => {\r\n                    console.log(res);\r\n                })\r\n        }\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n            {\r\n                authors.length > 0 &&\r\n                    authors.map((item, index)=> {\r\n                        return <div key={index}>{item.name}\r\n                        <button onClick={(e)=>{deleteAuthor(item._id)}}>\r\n                                Delete\r\n                        </button>\r\n                        <button><Link to={ getAuthorId(item) }>Edit</Link></button></div>\r\n                        \r\n                    \r\n                    })\r\n            }\r\n            <input type=\"button\" value=\"Add New Author\" onClick={navigateToNewRoute}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n","import React, { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { navigate, Link } from \"@reach/router\"\r\n\r\nconst CreateAuthorForm = props => {\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [errors, setErrors] = useState([])\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        axios.post(\"http://localhost:8000/api/author\", {\r\n            name: name,\r\n        })\r\n            .then(() => navigate(\"/\"))\r\n            .catch(err =>{\r\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n                const errorArr = []; // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                // Set Errors\r\n                setErrors(errorArr);\r\n            })\r\n    }\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                    {\r\n                                errors.map((err, index) => <small key={index} style={{color:\"red\"}}>{err}</small>)\r\n                            }\r\n                        <p><Link to=\"/\">Home</Link></p>\r\n                        <p>Add a new author:&nbsp;\r\n                           \r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <form onSubmit={ onSubmit }>\r\n                            <div className=\"form-group\">\r\n                                <label>Name:</label>\r\n                                <input onChange={(e)=>setName(e.target.value)} type=\"text\" className=\"form-control\"/>\r\n                            </div>\r\n                            <div className=\"form-group text-right\">\r\n                                <button onClick={()=>navigate(\"/\")} type=\"button\" className=\"btn btn-secondary btn-sm\">Cancel</button>\r\n                                <button className=\"btn btn-primary btn-sm\" style={{marginLeft: \"10px\"}}>Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    export default CreateAuthorForm;","import React, { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport { navigate, Link } from \"@reach/router\"\r\n\r\nconst EditAuthorForm = props => {\r\n\r\n    const { id } = props\r\n    const [authors, setAuthor] = useState({})\r\n    const [exists, setExists] = useState(true)\r\n    const [name, setName] = useState(\"\")\r\n    const [errors, setErrors] = useState([])\r\n    const [test, settest] = useState()\r\n\r\n    useEffect( ()=> {\r\n        axios.get(`http://localhost:8000/api/author/${id}`)\r\n            .then(response => setAuthor(response.data[0]))\r\n            .catch(error => {\r\n                console.log(\"There was an issue, \", error)\r\n                setExists(false)\r\n            })\r\n    }, [])\r\n    console.log(\"data.Auth\")\r\n\r\n    console.log(authors.name)\r\n\r\n\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        axios.put(`http://localhost:8000/api/author/${id}`, {name:name,})\r\n            .then(() => navigate(\"/\"))\r\n            .catch(err =>{\r\n                settest(err.response.data[0]);\r\n                const errorResponse = test.errors; // Get the errors from err.response.data\r\n                const errorArr = []; // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                // Set Errors\r\n                setErrors(errorArr);\r\n            })\r\n            \r\n    }\r\n\r\n    if (exists === false){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-8 offset-2 text-center\" style={{marginTop: \"200px\"}}>\r\n                        <h3>Oops. That author doesn't exists.</h3>\r\n                        <p><Link to=\"/new\">Would you like to add this author?</Link></p>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <p><Link to=\"/\">Home</Link></p>\r\n                    <p>Edit this author:&nbsp;\r\n                        {\r\n                            errors.map((err, index) => <small key={index} style={{color:\"red\"}}>{err}</small>)\r\n                        }\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <form onSubmit={ onSubmit }>\r\n                        <div className=\"form-group\">\r\n                            <label>Name:</label>\r\n                            <input onChange={(e)=>setName(e.target.value)} type=\"text\" placeholder={authors.name} className=\"form-control\"/>\r\n                        </div>\r\n                        <div className=\"form-group text-right\">\r\n                            <button onClick={()=>navigate(\"/\")} type=\"button\" className=\"btn btn-secondary btn-sm\">Cancel</button>\r\n                            <button className=\"btn btn-primary btn-sm\" style={{marginLeft: \"10px\"}}>Submit</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default EditAuthorForm","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Router} from \"@reach/router\";\nimport React, { useState } from 'react';\n\nimport AuthorsTable from \"./components/AuthorsTable\"\nimport CreateAuthorForm from \"./components/CreateAuthorForm\"\nimport EditAuthorForm from \"./components/EditAuthorForm\"\n\nfunction App() {\n\n  return (\n      <div className=\"App\">\n        <Router>\n          <AuthorsTable path=\"/\"/>\n          <CreateAuthorForm path=\"/new\"/>\n          <EditAuthorForm path=\"/:id\"/>\n        </Router>\n      </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}